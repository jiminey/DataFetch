{"version":3,"sources":["Components/StudentIndexItem.jsx","Components/StudentIndex.jsx","App.js","serviceWorker.js","index.js"],"names":["StudentIndexItem","props","state","showPullDown","tagInput","getAverage","bind","toggle","handleSubmit","addTag","handleInput","grades","average","total","i","length","parseInt","this","onClick","setState","e","preventDefault","keyCode","document","forms","submit","currentTarget","value","tag","tags","indexOf","id","map","idx","className","key","onSubmit","type","placeholder","onChange","firstName","toUpperCase","lastName","email","company","skill","test","src","pic","alt","Component","Student","students","nameKeyword","tagKeyword","studentsWithTags","isSearchNames","isSearchTags","handleName","handleTag","searchByName","searchByTags","axios","get","then","res","data","keyword","x","toLowerCase","includes","student","filter","shift","push","newList","uniqList","Set","list","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6ad0e201.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"./StudentIndexItem.css\";\n\nexport default class StudentIndexItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showPullDown: true,\n      tagInput: \"\"\n    };\n\n    this.getAverage = this.getAverage.bind(this);\n    this.showPullDown = this.showPullDown.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.addTag = this.addTag.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  getAverage(grades) {\n    let total = 0;\n    let average;\n\n    for (let i = 0; i < grades.length; i++) {\n      grades[i] = parseInt(grades[i]);\n      total += grades[i];\n      average = total / grades.length;\n    }\n    return average;\n  }\n\n  showPullDown() {\n    if (this.state.showPullDown) {\n      return (\n        <div>\n          <button onClick={this.toggle}>+</button>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <button onClick={this.toggle}>-</button>\n        </div>\n      );\n    }\n  }\n\n  toggle() {\n    this.setState({\n      showPullDown: !this.state.showPullDown\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.addTag(this.state.tagInput);\n  }\n\n  //allows to submit with return key instead of button\n  checkSubmit(e) {\n    if (e && e.keyCode === 13) {\n      document.forms[0].submit();\n    }\n  }\n\n  handleInput(e) {\n    e.preventDefault();\n    this.setState({\n      tagInput: e.currentTarget.value\n    });\n  }\n\n  addTag(tag) {\n    let tags = this.props.tags || [];\n    if (!(tags.indexOf(tag) > -1)) {\n      this.props.addTag(this.props.id, tag);\n    }\n  }\n\n  tagInput() {\n    const tags =\n      this.props.tags &&\n      this.props.tags.map((tag, idx) => {\n        return (\n          <li className=\"tag-li\" key={idx}>\n            {tag}\n          </li>\n        );\n      });\n\n    if (!this.state.showPullDown) {\n      return (\n        <div>\n          <div className=\"tag-container\">\n            <ul className=\"tags\">{tags}</ul>\n          </div>\n          <form onSubmit={this.handleSubmit}>\n            <input\n              className=\"tag-input\"\n              type=\"text\"\n              placeholder=\"Add a tag\"\n              onChange={this.handleInput}\n            />\n          </form>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    const firstName = this.props.firstName.toUpperCase();\n    const lastName = this.props.lastName.toUpperCase();\n    const email = this.props.email;\n    const company = this.props.company;\n    const skill = this.props.skill;\n    const grades = this.getAverage(this.props.grades);\n\n    const test =\n      !this.state.showPullDown &&\n      this.props.grades.map((test, idx) => {\n        return (\n          <li key={idx + 1}>\n            Test {idx + 1}: {test}%\n          </li>\n        );\n      });\n\n    return (\n      <div className=\"student-main\">\n        <div className=\"student-main-left\">\n          <img className=\"student-pic\" src={this.props.pic} alt=\"lost pic\" />\n          <div>\n            <ul>\n              <li className=\"name\">\n                {firstName} {lastName}\n              </li>\n              <li className=\"email\">Email: {email}</li>\n              <li>Company: {company}</li>\n              <li>Skill: {skill}</li>\n              <li>Average: {grades}%</li>\n            </ul>\n\n            <ul>{test}</ul>\n            {this.tagInput()}\n          </div>\n        </div>\n        <div className=\"pull-down\">{this.showPullDown()}</div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport StudentIndexItem from \"./StudentIndexItem\";\nimport \"./StudentIndex.css\";\n\nexport default class Student extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      students: [],\n      nameKeyword: \"\",\n      tagKeyword: \"\",\n      studentsWithTags: [],\n      isSearchNames: true,\n      isSearchTags: false\n    };\n    this.handleName = this.handleName.bind(this);\n    this.handleTag = this.handleTag.bind(this);\n    this.searchByName = this.searchByName.bind(this);\n    this.searchByTags = this.searchByTags.bind(this);\n    this.addTag = this.addTag.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(\"https://www.hatchways.io/api/assessment/students\").then(res => {\n      this.setState({ students: res.data.students });\n    });\n  }\n\n  handleName(e) {\n    e.preventDefault();\n    this.setState({\n      nameKeyword: e.currentTarget.value,\n      isSearchNames: true,\n      isSearchTags: false\n    });\n  }\n\n  handleTag(e) {\n    e.preventDefault();\n    this.setState({\n      tagKeyword: e.currentTarget.value,\n      isSearchTags: true,\n      isSearchNames: false\n    });\n  }\n\n  searchByName(keyword) {\n    return x => {\n      return (\n        x.firstName.toLowerCase().includes(keyword.toLowerCase()) ||\n        x.lastName.toLowerCase().includes(keyword.toLowerCase())\n      );\n    };\n  }\n\n  searchByTags(keyword) {\n    return x => {\n      return x.tags.includes(keyword);\n    };\n  }\n\n  addTag(id, tag) {\n    const student = this.state.students\n      .filter(student => student.id === id)\n      .shift();\n\n    student.tags = student.tags || [];\n    student.tags.push(tag);\n\n    let newList = [...this.state.studentsWithTags, student];\n    let uniqList = [...new Set(newList)];\n    this.setState({\n      studentsWithTags: uniqList\n    });\n  }\n\n  render() {\n    //ternary for searching with name or tag\n    const students = this.state.isSearchNames\n      ? this.state.students\n          .filter(this.searchByName(this.state.nameKeyword))\n          .map(student => {\n            return (\n              <StudentIndexItem\n                key={student.id}\n                students={this.state.students}\n                id={student.id}\n                pic={student.pic}\n                firstName={student.firstName}\n                lastName={student.lastName}\n                email={student.email}\n                company={student.company}\n                skill={student.skill}\n                grades={student.grades}\n                tags={student.tags}\n                addTag={this.addTag}\n              ></StudentIndexItem>\n            );\n          })\n      : this.state.studentsWithTags\n          .filter(this.searchByTags(this.state.tagKeyword))\n          .map(student => {\n            return (\n              <StudentIndexItem\n                key={student.id}\n                id={student.id}\n                pic={student.pic}\n                firstName={student.firstName}\n                lastName={student.lastName}\n                email={student.email}\n                company={student.company}\n                skill={student.skill}\n                grades={student.grades}\n                tags={student.tags}\n                addTag={this.addTag}\n              ></StudentIndexItem>\n            );\n          });\n    //edge case to display index when nothing is in search box\n    let list;\n    if (this.state.tagKeyword === \"\" && this.state.nameKeyword === \"\") {\n      list = this.state.students.map(student => {\n        return (\n          <StudentIndexItem\n            key={student.id}\n            id={student.id}\n            pic={student.pic}\n            firstName={student.firstName}\n            lastName={student.lastName}\n            email={student.email}\n            company={student.company}\n            skill={student.skill}\n            grades={student.grades}\n            tags={student.tags}\n            addTag={this.addTag}\n          ></StudentIndexItem>\n        );\n      });\n    } else {\n      list = students;\n    }\n    return (\n      <div className=\"index\">\n        <div>\n          <form>\n            <input\n              className=\"search-bar\"\n              type=\"text\"\n              onChange={this.handleName}\n              placeholder=\"Search by name\"\n              value={this.state.nameKeyword}\n            />\n          </form>\n        </div>\n        <div>\n          <form>\n            <input\n              className=\"search-bar\"\n              type=\"text\"\n              onChange={this.handleTag}\n              placeholder=\"Search by tags\"\n              value={this.state.tagKeyword}\n            />\n          </form>\n        </div>\n\n        <div>{list}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport StudentIndex from \"./Components/StudentIndex\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <StudentIndex></StudentIndex>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}